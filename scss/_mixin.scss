@charset "utf-8";

@mixin g-clearfix {
  @include has-layout;
  &:after,
  &:before {
    display: table;
    clear: both;
    content: "";
   }
}

@mixin font-size ($px) {
  font-size: $px + px;
  font-size: $px / 10 + rem;
}

@mixin alt-img {
  display: inline-block;
  overflow: hidden;
  height: 0;
  vertical-align: middle;

  // 印刷時に画像置換をキャンセルする場合には以下を有効化する
  // @media screen {
  //   width: auto !important;
  //   height: auto !important;
  //   background-image: none !important;
  // }
}

@mixin units {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;

  // display: table;
  margin: 0;
  padding: 0;
  letter-spacing: -.4em;

  .no-flexbox & {
    display: block;
  }

  table & {
    // IE11とIE10ではテーブル内のFlaxboxが良からぬ動きをする
    display: block;
  }

  .lt-ie8 & {
    overflow: visible;
    zoom: 1;
  }

  &:after {
    display: block;
    clear: both;
    height: 0;
    content: "";
  }
}

@mixin unit {
  @include inline-block;
  box-sizing: border-box;
  width: 100%;
  list-style: none;
  vertical-align: top;
  letter-spacing: normal;
  margin: 0;

  .lt-ie8 & {
    zoom: 1;
  }
}

@mixin units--right {

  justify-content: flex-end;

  .no-flexbox & {
    display: block;

    > .unit {
      float: right;
    }
  }
}

@mixin units--reverse() {
  flex-direction: row-reverse;

  &.units--liquid {

    > .unit {
      float: right;
    }

    > .unit--liquid {
      float: none;
      z-index: 1;
    }

    > .unit:last-child {
      float: none;
    }
  }

  .no-flexbox & {

    > .unit {
      float: right;
    }
  }
}

%icon {
  display:inline-block;
  text-decoration:inherit;
  font-weight:normal;
  font-style:normal;
  font-family:"icon";
}


@mixin unit--g() {

  @each $name, $size in $screen-size {

    @if $name == pc {

      @each $gutter in $unit-gutter {

        .units--g#{$gutter} {
          margin: 0 0 -#{$gutter}px -#{$gutter}px;

          & > .unit {
            padding: 0 0 #{$gutter}px #{$gutter}px;
          }
        }
      }
    } @else {

      @media (max-width: $size) {

        @each $gutter in $unit-gutter {

          .#{$name}-units--g#{$gutter} {
            margin: 0 0 -#{$gutter}px -#{$gutter}px;

            & > .unit {
              padding: 0 0 #{$gutter}px #{$gutter}px;
            }
          }
        }
      }
    }
  }
}

@mixin echo-unit-size ($prefix: "") {

  .#{$prefix}size#{$size-divider}auto {
    width: auto;
  }

  .#{$prefix}size#{$size-divider}1of1 {
    width: 100%;
  }

  .#{$prefix}size#{$size-divider}1of2 {
    width: 50%;
  }

  @each $n in 1, 2 {

    .#{$prefix}size#{$size-divider}#{$n}of3 {
      width: percentage( $n / 3 );
    }
  }

  @each $n in 1, 3 {

    .#{$prefix}size#{$size-divider}#{$n}of4 {
      width: percentage( $n / 4 );
    }
  }

  @for $n from 1 through 4 {

    .#{$prefix}size#{$size-divider}#{$n}of5 {
      width: percentage( $n / 5 );
    }
  }

  @each $n in 1, 5 {

    .#{$prefix}size#{$size-divider}#{$n}of6 {
      width: percentage( $n / 6 );
    }
  }

  @for $n from 1 through 6 {

    .#{$prefix}size#{$size-divider}#{$n}of7 {
      width: percentage( $n / 7 );
    }
  }

  @each $n in 1, 3, 5, 7 {

    .#{$prefix}size#{$size-divider}#{$n}of8 {
      width: percentage( $n / 8 );
    }
  }

  @each $n in 1, 2, 4, 5, 7, 8 {

    .#{$prefix}size#{$size-divider}#{$n}of9 {
      width: percentage( $n / 9 );
    }
  }

  @each $n in 1, 3, 7, 9 {

    .#{$prefix}size#{$size-divider}#{$n}of10 {
      width: percentage( $n / 10 );
    }
  }

  @for $n from 1 through 10 {

    .#{$prefix}size#{$size-divider}#{$n}of11 {
      width: percentage( $n / 11 );
    }
  }

  @each $n in 1, 5, 7, 11 {

    .#{$prefix}size#{$size-divider}#{$n}of12 {
      width: percentage( $n / 12 );
    }
  }

  @each $n in 1, 3, 5, 7, 11, 13, 15 {

    .#{$prefix}size#{$size-divider}#{$n}of16 {
      width: percentage( $n / 16 );
    }
  }
}

@mixin unit-size ($map) {

  @each $name, $size in $map {

    $prefix: "#{$name}-";

    @if $name == pc {
      $prefix: "";
      @include echo-unit-size($prefix);
    } @else {
      @media (max-width: $size) {
        @include echo-unit-size($prefix);
      }
    }
  }
}

@mixin margin-class($prefix, $suffix, $size) {

  .h-#{$prefix}mt#{$size-divider}#{$suffix} {
    margin-top: $size;
  }

  .h-#{$prefix}mb#{$size-divider}#{$suffix} {
    margin-bottom: $size;
  }

  .h-#{$prefix}ml#{$size-divider}#{$suffix} {
    margin-left: $size;
  }

  .h-#{$prefix}mr#{$size-divider}#{$suffix} {
    margin-right: $size;
  }

  .h-#{$prefix}mv#{$size-divider}#{$suffix} {
    margin-top: $size;
    margin-bottom: $size;
  }

  .h-#{$prefix}mh#{$size-divider}#{$suffix} {
    margin-right: $size;
    margin-left: $size;
  }

  .h-#{$prefix}ma#{$size-divider}#{$suffix} {
    margin: $size;
  }
}

@mixin padding-class($prefix, $suffix, $size) {

  .h-#{$prefix}pt#{$size-divider}#{$suffix} {
    padding-top: $size;
  }

  .h-#{$prefix}pb#{$size-divider}#{$suffix} {
    padding-bottom: $size;
  }

  .h-#{$prefix}pl#{$size-divider}#{$suffix} {
    padding-left: $size;
  }

  .h-#{$prefix}pr#{$size-divider}#{$suffix} {
    padding-right: $size;
  }

  .h-#{$prefix}pv#{$size-divider}#{$suffix} {
    padding-top: $size;
    padding-bottom: $size;
  }

  .h-#{$prefix}ph#{$size-divider}#{$suffix} {
    padding-right: $size;
    padding-left: $size;
  }

  .h-#{$prefix}pa#{$size-divider}#{$suffix} {
    padding: $size;
  }
}

@mixin helper-class($prefix:"") {

  // マージン
  @include margin-class($prefix, n, 0);
  @include margin-class($prefix, s, 5px);
  @include margin-class($prefix, m, 10px);
  @include margin-class($prefix, l, 20px);

  // パディング
  @include padding-class($prefix, n, 0);
  @include padding-class($prefix, s, 5px);
  @include padding-class($prefix, m, 10px);
  @include padding-class($prefix, l, 20px);

  /* CLEARFIX */
  .clearfix,
  .cf {
    @include g-clearfix();
  }

  // Emmet Style Helpers
  // http://docs.emmet.io/cheat-sheet/

  /* テキスト方向
  以下のWordpressのリッチテキストエディタが付加するクラス(※)も合わせて設定
  ※ .alignleft / .alignright / .aligncenter
  */
  .txtl,
  .alignleft,
  .h-#{$prefix}tal,
  .h-#{$prefix}ta-l {
    text-align: left;
  }

  .txtr,
  .alignright,
  .h-#{$prefix}tar,
  .h-#{$prefix}ta-r {
    text-align: right;
  }

  .txtc,
  .aligncenter,
  .h-#{$prefix}tac,
  .h-#{$prefix}ta-c {
    text-align: center;
  }

  /* フロート
  Wordpressのリッチテキストエディタが付加するクラス(※)を網羅。
  ※ .left / .right / .clear
  */
  .left,
  .h-#{$prefix}fll,
  .h-#{$prefix}fl-l {
    float: left;
    margin-top: 0;
  }

  .right,
  .h-#{$prefix}flr,
  .h-#{$prefix}fl-r {
    float: right;
    margin-top: 0;
  }

  .clear,
  .h-#{$prefix}cl {
    float: none;
    clear: both;
  }

  .hide,
  .h-#{$prefix}dn,
  .h-#{$prefix}d-n {
    display: none;
  }

  .show,
  .h-#{$prefix}db,
  .h-#{$prefix}d-b {
    display: block;
  }

  .posr,
  .h-#{$prefix}posr,
  .h-#{$prefix}pos-r {
    position: relative;
  }

  .posa,
  .h-#{$prefix}posa,
  .h-#{$prefix}pos-a {
    position: absolute;
  }

  .ovh,
  .h-#{$prefix}ovh,
  .h-#{$prefix}ov-h {
    overflow: hidden;
  }

  .h-#{$prefix}ovv,
  .h-#{$prefix}ov-v {
    overflow: visible;
  }

  .h-#{$prefix}pen,
  .h-#{$prefix}pe-n {
    pointer-events: none;
  }

  .h-#{$prefix}vat,
  .h-#{$prefix}va-t {
    vertical-align: top;
  }
}
