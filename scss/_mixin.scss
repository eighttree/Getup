@charset "utf-8";

/////////////////////////////////////////////////
// flexbox関連

  @mixin g-flex {
    @include display-box;
    @include experimental-value(display, flex, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  $g-default-flex-direction: row;
  @mixin g-flex-direction($direction: $g-default-flex-direction) {
    @if $direction == row {
      @include box-orient(horizontal);
    } @else if $direction == column {
      @include box-orient(vertical);
    } @else if $direction == row-reverse {
      @include box-orient(horizontal);
      @include box-direction(reverse);
    } @else if $direction == column-reverse {
      @include box-orient(vertical);
      @include box-direction(reverse);
    }
    @include experimental(flex-direction, $direction, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  $g-default-flex-wrap: wrap;
  @mixin g-flex-wrap($wrap: $g-default-flex-wrap) {
    @if $wrap == wrap {
      @include box-lines(multiple);
    } @else {
      @include box-lines(single);
    }
    @include experimental(flex-wrap, $wrap, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  @mixin g-flex-flow($direction: $g-default-flex-direction, $wrap: $g-default-flex-wrap) {
    @include g-flex-direction($direction);
    @include g-flex-wrap($wrap);
  }

  $g-default-justify-content: flex-start;
  @mixin g-justify-content($justify-content: $g-default-justify-content) {
    @if $justify-content == flex-start {
      @include box-pack(start);
    } @else if $justify-content == flex-end {
      @include box-pack(end);
    } @else if $justify-content == center {
      @include box-pack(center);
    }
    @include experimental(justify-content, $justify-content, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  $g-default-align-items: stretch;
  @mixin g-align-items($align-items: $g-default-align-items){
    @if $align-items == stretch {
      @include box-align(stretch);
    } @else if $align-items == flex-start {
      @include box-align(start);
    } @else if $align-items == fles-end {
      @include box-align(end);
    } @else {
      @include box-align($align-items);
    }
    @include experimental(align-items, $align-items, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  $g-default-align-content: flex-start;
  @mixin g-align-content($align-content: $g-default-align-content){
    @include experimental(align-content, $align-content, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

@mixin g-clearfix {
  &:after,
  &:before {
    content: "";
    display: table;
    clear: both;
   }
  @include has-layout;
}

@mixin alt-img {
  @include inline-block();
  height: 0;
  overflow: hidden;
}

@mixin g-box-sizing($box-sizing:border-box) {
  @include box-sizing($box-sizing);
  *behavior: url($box-sizing-path);
}

@mixin unit-vertical {
  @include box-flex(1);
  width: 100%;
}

@mixin units-vertical {
  @include g-flex();
  @include g-flex-direction(column);
  @include g-flex-wrap(nowrap);
  @include g-justify-content(flex-start);
  @include g-align-items(stretch);
  @include g-align-content(flex-start);
  > * {
    @include unit-vertical;
  }
}

@mixin units {
  // display: table;
  margin: 0;
  padding: 0;
  letter-spacing: -.4em;
  @include g-box-sizing();
  .lt-ie8 & {
    overflow: visible;
    zoom: 1;
  }
  &:after {
    clear: both;
    content: "";
    display: block;
    height: 0;
  }
}

@mixin unit {
  @include inline-block;
  @include g-box-sizing();
  list-style: none;
  letter-spacing: normal;
  vertical-align: top;
  width: 100%;
  .lt-ie8 & {
    zoom: 1;
  }
}

@mixin legacy-unit-vertical {
  clear: both;
  display: block;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
}

@mixin units-gutter($gutter-width:20px) {
  margin-left: -$gutter-width;
  > * {
    padding-left: $gutter-width;
  }
  .unit {
    padding-left: $gutter-width;
  }
}

@mixin units-liquid{
  @include g-clearfix;
  > * {
    float: left;
  }
  .unit {
    float: left;
  }
}

@mixin unit-liquid {
  display: table-cell;
  float: none;
  _position: relative;
  _left: -3px;
  _margin-right: -3px;
  width: auto;
}

@mixin units-right {
  text-align: right;
  > * {
    text-align: left;
  }
  .unit {
    text-align: left;
  }
}
