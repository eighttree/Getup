@charset "utf-8";

/////////////////////////////////////////////////
// flexbox関連

  @mixin g-flex {
    @include display-box;
    @include experimental-value(display, flex, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

  $g-default-flex-direction: row;
  @mixin g-flex-direction($direction: $g-default-flex-direction) {
    @include experimental(flex-direction, $direction, -moz, -webkit, not -o, -ms, not -khtml, official);
    @if $direction == row {
      @include box-orient(horizontal);
    } @else if $direction == column {
      @include box-orient(vertical);
    } @else if $direction == row-reverse {
      @include box-orient(horizontal);
      @include box-direction(reverse);
    } @else if $direction == column-reverse {
      @include box-orient(vertical);
      @include box-direction(reverse);
    }
  }

  $g-default-flex-wrap: wrap;
  @mixin g-flex-wrap($wrap: $g-default-flex-wrap) {
    @include experimental(flex-wrap, $wrap, -moz, -webkit, not -o, -ms, not -khtml, official);
    @if $wrap == wrap {
      @include box-lines(multiple);
    } @else {
      @include box-lines(single);
    }
  }

  @mixin g-flex-flow($direction: $g-default-flex-direction, $wrap: $g-default-flex-wrap) {
    @include g-flex-direction($direction);
    @include g-flex-wrap($wrap);
  }

  $g-default-justify-content: flex-start;
  @mixin g-justify-content($justify-content: $g-default-justify-content) {
    @include experimental(justify-content, $justify-content, -moz, -webkit, not -o, -ms, not -khtml, official);
    @if $justify-content == flex-start {
      @include box-pack(start);
    } @else if $justify-content == flex-end {
      @include box-pack(end);
    } @else if $justify-content == center {
      @include box-pack(center);
    }
  }

  $g-default-align-items: stretch;
  @mixin g-align-items($align-items: $g-default-align-items){
    @include experimental(align-items, $align-items, -moz, -webkit, not -o, -ms, not -khtml, official);
    @if $align-items == stretch {
      @include box-align(stretch);
    } @else if $align-items == flex-start {
      @include box-align(start);
    } @else if $align-items == fles-end {
      @include box-align(end);
    } @else {
      @include box-align($align-items);
    }
  }

  $g-default-align-content: flex-start;
  @mixin g-align-content($align-content: $g-default-align-content){
    @include experimental(align-content, $align-content, -moz, -webkit, not -o, -ms, not -khtml, official);
  }

@mixin g-clearfix {
  @include has-layout;
  &:after,
  &:before {
    display: table;
    clear: both;
    content: "";
   }
}

@mixin alt-img {
  @include inline-block();
  overflow: hidden;
  height: 0;

  // 印刷時に画像置換をキャンセルする場合には以下を有効化する
  // @media screen {
  //   padding: 0 !important;
  //   width: auto !important;
  //   height: auto !important;
  //   background-image: none !important;
  // }
}

@mixin g-box-sizing($box-sizing:border-box) {
  @include box-sizing($box-sizing);
  *behavior: url($box-sizing-path);
}

@mixin units {
  @include g-box-sizing();
  @include g-flex;
  @include g-flex-direction(row);
  @include g-flex-wrap(wrap);
  @include g-justify-content(flex-start);
  // display: table;
  margin: 0;
  padding: 0;
  letter-spacing: -.4em;

  .no-flexbox & {
    display: block;
  }

  .lt-ie8 & {
    overflow: visible;
    zoom: 1;
  }

  &:after {
    display: block;
    clear: both;
    height: 0;
    content: "";
  }
}

@mixin unit {
  @include inline-block;
  @include g-box-sizing();
  width: 100%;
  list-style: none;
  vertical-align: top;
  letter-spacing: normal;

  .lt-ie8 & {
    zoom: 1;
  }
}

@mixin unit--vertical {
  // @include box-flex(1 1 100%);
  width: 100%;
}

// 一部環境でバグが発生する可能性有り
@mixin units--vertical {
  // @include g-flex();
  // @include g-flex-direction(column);
  // @include g-flex-wrap(nowrap);
  // @include g-justify-content(flex-start);
  // @include g-align-items(stretch);
  // @include g-align-content(flex-start);
  display: block;
  > * {
    @include unit--vertical;
  }
}

@mixin legacy-unit--vertical {
  display: block;
  clear: both;
  padding-right: 0;
  padding-left: 0;
  width: 100%;
}

@mixin units--gutter($gutter-width:20px) {
  margin-left: -$gutter-width;

  > * {
    padding-left: $gutter-width;
  }

  .unit {
    padding-left: $gutter-width;
  }
}

@mixin unit--liquid {
  display: table-cell;
  float: none;
  width: auto;
  _position: relative;
  _left: -3px;
  _margin-right: -3px;
}

@mixin units--liquid{
  @include g-clearfix;
  display: block;

  > * {
    float: left;
  }

  > .unit {
    float: left;

    &:last-child {
      @include unit--liquid;
    }
  }

  .lt-ie7 & {

    .unit {
      float: left;
    }

    * .unit {
      float: none;
    }
  }
}

@mixin units--right {

  @include g-justify-content(flex-end);

  .no-flexbox & {
    display: block;
    text-align: right;

    > * {
      text-align: left;
    }

    > .unit {
      text-align: left;
    }
  }
}

@mixin units--right-order() {
  @include g-flex-direction(row-reverse);

  &.units--liquid {

    > .unit {
      float: right;
    }

    > .unit--liquid,
    > .unit:last-child {
      float: none;
    }
  }

  .no-flexbox & {
    display: block;
  }

  .lt-ie7 & {

    .unit {
      float: right
    }

    * .unit {
      float: none;
    }
  }
}

////////////////////////////////////////////////
// keyframes mixin

@mixin animation-name($name) {
  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  -ms-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($name) {
  -webkit-animation-duration: $name;
  -moz-animation-duration: $name;
  -ms-animation-duration: $name;
  animation-duration: $name;
}

@mixin animation-timing-function($name) {
  -webkit-animation-timing-function: $name;
  -moz-animation-timing-function: $name;
  -ms-animation-timing-function: $name;
  animation-timing-function: $name;
}

@mixin animation-iteration-count($name) {
  -webkit-animation-iteration-count: $name;
  -moz-animation-iteration-count: $name;
  -ms-animation-iteration-count: $name;
  animation-iteration-count: $name;
}

@mixin animation-direction($name) {
  -webkit-animation-direction: $name;
  -moz-animation-direction: $name;
  -ms-animation-direction: $name;
  animation-direction: $name;
}

@mixin animation-delay($name) {
  -webkit-animation-delay: $name;
  -moz-animation-delay: $name;
  -ms-animation-delay: $name;
  animation-delay: $name;
}

@mixin animation-play-state($name) {
  -webkit-animation-play-state: $name;
  -moz-animation-play-state: $name;
  -ms-animation-play-state: $name;
  animation-play-state: $name;
}

@mixin animation-fill-mode($name) {
  -webkit-animation-fill-mode: $name;
  -moz-animation-fill-mode: $name;
  -ms-animation-fill-mode: $name;
  animation-fill-mode: $name;
}

@mixin keyframes($name) {
  @-webkit-keyframes $name { @content; }
  @-moz-keyframes $name { @content; }
  @-ms-keyframes $name { @content; }
  @keyframes $name { @content; }
}

@mixin animation($animation...) {
  -webkit-animation: $animation;
  -moz-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}